# Build worker image (VM template)
image: Visual Studio 2017

clone_depth: 5

version: '{build}'

platform:
  - x86

configuration:
  - Release
  #- Debug

environment:
  MSBUILD_FLAGS: /verbosity:minimal /maxcpucount
  matrix:
    #VS 14 + Py2.7
    - PYTHON: "C:\\Python27"
      PYTHON_VERSION: "2.7"
    #VS 14 + Py3.4
    - PYTHON: "C:\\Python34"
      PYTHON_VERSION: "3.4"
    #VS 14 + Py3.5
    #- PYTHON: "C:\\Python35"
    #  PYTHON_VERSION: "3.5"  
    #VS 14 + Py3.6
    - PYTHON: "C:\\Python36"
      PYTHON_VERSION: "3.6"  

matrix:
  fast_finish: true

cache:
  - C:\projects\boost-appveyor\build\boost_1_64_0.7z

# scripts that are called at very beginning, before repo cloning
init:
  - ps: iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))
  - date /T & time /T
  - git config --global core.autocrlf input
  - cmake --version
  # go to hell Xamarin (see http://help.appveyor.com/discussions/problems/4569)
  - del "C:\Program Files (x86)\MSBuild\14.0\Microsoft.Common.targets\ImportAfter\Xamarin.Common.targets"
  # Set "build version number" to "short-commit-hash" or when tagged to "tag name" (Travis style)
  - ps: >-
      if ($env:APPVEYOR_REPO_TAG -eq "true")
      {
        Update-AppveyorBuild -Version "$env:APPVEYOR_REPO_TAG_NAME"
      }
      else
      {
        Update-AppveyorBuild -Version "dev-$($env:APPVEYOR_REPO_COMMIT.substring(0,7))"
      }
  # There are multiple pre-installed versions of Python on Appveyor  
  # see https://www.appveyor.com/docs/installed-software/#python
  - echo %PYTHON% %PYTHON_VERSION%
  - "SET PATH=%PYTHON%;%PYTHON%\\bin;%PYTHON%\\Scripts;%PATH%"
  # Show version and architecture for Python
  - "%PYTHON%\\python.exe --version"
  - "%PYTHON%\\python.exe -c \"import struct; print(struct.calcsize('P') * 8)\""

install:

#before_build:
  # git sh.exe conflicts with MinGW makefiles
  #- if "%generator%"=="MinGW Makefiles" (set "PATH=%PATH:C:\Program Files\Git\usr\bin;=%")

build_script:
  - dir
  - ps: >-
      switch ($env:PYTHON_VERSION) 
      {
        "2.7" {copy user-config-python2.jam "$env:userprofile\user-config.jam"}
        "3.4" {copy user-config-python34.jam "$env:userprofile\user-config.jam"}
        "3.5" {copy user-config-python35.jam "$env:userprofile\user-config.jam"}
        "3.6" {copy user-config-python36.jam "$env:userprofile\user-config.jam"}
      }
  - ps: if (-not( Test-Path "build")) { mkdir build }
  - cd build
  # generate build script - SHARED LIB
  - ps: >-
       if (-not( Test-Path "boost_1_64_0.7z"))
       {
        Invoke-WebRequest -Uri https://sourceforge.net/projects/boost/files/boost/1.64.0/boost_1_64_0.7z/download -OutFile boost_1_64_0.7z -UserAgent [Microsoft.PowerShell.Commands.PSUserAgent]::FireFox
       }
  - ps: 7z x boost_1_64_0.7z
  - ps: cd boost_1_64_0
  - ps: ./bootstrap.bat
  - ps: ./b2.exe install --prefix="..\install_python_$env:PYTHON_VERSION" --with-python --build-dir="build_python_$env:PYTHON_VERSION" link=shared variant=release threading=multi
        

after_build:
  - dir
  - cd "..\install_python_%PYTHON_VERSION%"
  - 7z a -tzip -mx9 "%APPVEYOR_BUILD_FOLDER%\boost-python-%PYTHON_VERSION%-%APPVEYOR_BUILD_VERSION%-%COMPILER%-%platform%.zip"
  - appveyor PushArtifact "%APPVEYOR_BUILD_FOLDER%\boost-python-%PYTHON_VERSION%-%APPVEYOR_BUILD_VERSION%-%COMPILER%-%platform%.zip"

on_finish:
  #- ps: $blockRdp = $true; iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))


artifacts:
  - path: 'boost-python-*.zip'
    name: boost-python
